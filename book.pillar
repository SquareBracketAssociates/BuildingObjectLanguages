{ "metadata": { "title": "Exploring Object Language Kernels" ,
	"attribution" : "St√©phane Ducasse"} } 

In this book we will explore various language kernels by building them. 
Doing so we will learn about objects, object creation instantiation, message lookup, delegation, inheritance and much more. 

We plan to have at least three kernels: 
- Class based reflective (ObjVlisp)
- Prototypes
- Actors

Possible future adventures
- Talents? (pablo?)
- Mirrors?
- MirrorMethod?
- SplitObject Views (no.)
- Mixin?
- Traits?



!! Implementation Techniques

Here I will present 

- Anonymous classes
- and may be some tricks of the reflection chapter
- Proxy?


${inputFile:Chapters/Proto/ProtoTheory.pillar}$

${inputFile:Chapters/Proto/Proto.pillar}$

${inputFile:Chapters/ObjVTheory/ObjVTheory.pillar}$

${inputFile:Chapters/ObjV/ObjV.pillar}$

${inputFile:Chapters/Actalk/Actalk.pillar}$

{{{latex: \bibliographystyle{abbrv}
\bibliography{rmod}
}}}
